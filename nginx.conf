user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    '"$http_x_forwarded_for" '
                    'request_time=$request_time '
                    'upstream_response_time=$upstream_response_time '
                    'host=$host '
                    'scheme=$scheme '
                    'protocol=$server_protocol';

    log_format headers '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '"$http_x_forwarded_for" '
                       'sent_origin=$sent_http_access_control_allow_origin '
                       'cors_request_headers="$http_access_control_request_headers" '
                       'response_headers="$sent_http_access_control_allow_headers" '
                       'request_method=$request_method '
                       'response_content_type=$sent_http_content_type';
                       
    access_log /var/log/nginx/access.log main;
    access_log /var/log/nginx/headers.log headers;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        # TODO: 도메인 설정 시 변경 필요
        server_name api.bogiegie.shop; #13.209.10.93;  # EC2 퍼블릭 IP 주소
        
        # HTTP를 HTTPS로 리다이렉트
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$host$request_uri;
        }

        # TODO: HTTPS 설정시 삭제 필요
        # set $cors_origin "";
        # if ($http_origin ~* (http://localhost:5174|https://moonco.swygbro.com|https://mooncotest.vercel.app)) {
        #     set $cors_origin $http_origin;
        # }

        # add_header 'Access-Control-Allow-Origin' $cors_origin always;
        # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        # add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        # add_header 'Access-Control-Allow-Credentials' 'true' always;

        # location / {
        #     if ($request_method = 'OPTIONS') {
        #         add_header 'Access-Control-Max-Age' 1728000;
        #         add_header 'Content-Type' 'text/plain charset=UTF-8';
        #         add_header 'Content-Length' 0;
        #         return 204;
        #     }

        #     proxy_pass http://nest_app:3000;  # NestJS 애플리케이션 주소
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection 'upgrade';
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;

        #     # 프록시 버퍼 설정
        #     proxy_buffer_size 128k;
        #     proxy_buffers 4 256k;
        #     proxy_busy_buffers_size 256k;
        # }
    }

    # HTTPS 설정
    server {
        listen 443 ssl http2;
        # TODO: 도메인 설정 시 변경 필요
        server_name api.bogiegie.shop;  # 실제 도메인으로 변경

        ssl_certificate /etc/letsencrypt/live/api.bogiegie.shop/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.bogiegie.shop/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;
        ssl_session_tickets off;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;

        # HSTS (63072000 seconds = 2 years)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;

        # TODO: 실제 프론트엔드 도메인으로 변경
        set $cors_origin "";
        if ($http_origin ~* (https://moonco.swygbro.com|https://mooncotest.vercel.app|https://.*\.moonco\.com(:[0-9]+)?$)) {
            set $cors_origin $http_origin;
        }

        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            proxy_pass http://nest_app:3000;  # NestJS 애플리케이션 주소
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme; 
            # 프록시 버퍼 설정
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
    }
}