services:
  nest_app:
    container_name: nest_app_prod
    image: ${DOCKERHUB_USERNAME}/${DOCKER_REPO}:${IMAGE_TAG}
    ports:
      - "${NODE_PORT}:${NODE_PORT}"
    env_file:
      - .env.prod
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${NODE_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 700M

  nginx:
    image: nginx:latest
    container_name: nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/lib/letsencrypt:/var/lib/letsencrypt:ro
    depends_on:
      - nest_app
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 200M

  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: prometheus_prod
    env_file:
      - .env.prod
    environment:
      - PROMETHEUS_PORT=${PROMETHEUS_PORT}
    ports:
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    healthcheck:
      test:
        ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:9090"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 300M

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    env_file:
      - .env.prod
    environment:
      - NODE_EXPORTER_PORT=${NODE_EXPORTER_PORT}
    ports:
      - "${NODE_EXPORTER_PORT}:${NODE_EXPORTER_PORT}"
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
      - "--collector.loadavg"
      - "--collector.meminfo"
      - "--collector.cpu"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

  grafana:
    image: grafana/grafana:8.2.2
    container_name: grafana_prod
    env_file:
      - .env.prod
    environment:
      - PROMETHEUS_PORT=${PROMETHEUS_PORT}
    ports:
      - "${GRAFANA_PORT}:${GRAFANA_PORT}"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PROMETHEUS_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 300M

volumes:
  prometheus_data:
  grafana_data:
